import static org.junit.Assert.*;

import org.junit.Test;


public class PhDTester {
	
	@Test
    public void testConstructor1(){
		PhD p = new PhD("Sue Younes", 'F', 1995, 2);
		// assertEquals(expected val, computed val);
		assertEquals("Sue Younes", p.getName());
		assertEquals(true, p.isFemale());
		assertEquals(1995, p.getYear());
		assertEquals(2, p.getMonth());
		
		PhD p2 = new PhD("Philipp Hanna", 'M', 2002, 12);
		assertEquals("Philipp Hanna", p2.getName());
		assertEquals(false, p2.isFemale());
		assertEquals(2002, p2.getYear());
		assertEquals(12, p.getMonth());
	
	}
		
	public void testSetters(){
		PhD p3 = new PhD("Maheer Iqbal", 'M', 1993, 4);
		PhD p4 = new PhD("Bingyi Wang", 'F', 1996, 8);
		PhD p5 = new PhD("Amina Ayoub", 'F', 1982, 1);
		//assign first advisor to p3
		p3.addAdvisor1(p4);
		//check that first advisor was assigned
		assertEquals(p3.getFirstAd(), p4);
		assertEquals(p3.numAdvisees(),1);
		//assign second advisor to p3
		p3.addAdvisor2(p5);
		//check that second advisor was assigned
		assertEquals(p3.getSecondAd(), p5);
		assertEquals(p3.numAdvisees(),2);
		
	}
	
	
	public void testSetters(){
		Bee babybee = new Bee("bbb", 'F', 2013, 2);
		Bee mombee = new Bee("Mom", 'F', 2000, 4);
		Bee dadbee = new Bee("Dad", 'M', 2000, 6);
		//assigns the parent bees to the babybee
		babybee.addMom(mombee);
		babybee.addDad(dadbee);
		//checks that the mombee was assigned
		assertEquals(babybee.getMom(), mombee);
		//checks that the dadbee was assigned
		assertEquals(babybee.getDad(), dadbee);
		//checks that both parents have only one child
		assertEquals(1, mombee.getNumChildren());
		assertEquals(1, dadbee.getNumChildren());

}
